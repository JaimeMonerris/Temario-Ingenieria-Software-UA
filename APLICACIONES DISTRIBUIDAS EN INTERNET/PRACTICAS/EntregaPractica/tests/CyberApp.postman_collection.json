{
	"variables": [],
	"info": {
		"name": "CyberApp",
		"_postman_id": "955b0a6f-1d51-58cb-922c-f85c883336e9",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "/register/",
			"description": "Dirección de registro de los usuarios.",
			"item": [
				{
					"name": "REGISTRANDO ADMINISTRADOR",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var code = responseCode.code;",
									"//Status 201 si es la primera ejecuciónd e las pruebas, 400 si no, ya que el admin ya existe",
									"//Otro casi distinto de 201/400 sería erroneo",
									"tests[\"Admin registry: Status code is 201 or 400\"] = code === 201 || code === 400;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/register/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"admin\",\n\t\"email\":\"admin\",\n\t\"password\":\"admin\"\n}"
						},
						"description": "Creando un usuario admin temporal (la rest api identifica que el usuario se llama \"admin\" y le da permisos, aunque esto estará solo disponible en modo de desarrollo.)"
					},
					"response": []
				},
				{
					"name": "user: asd email: asd password: asd POST /register/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"User registry OK: Status code is 201\"] = responseCode.code === 201;",
									"/*",
									"var body = JSON.parse(responseBody);",
									"//postman.globals.set(\"AdminToken\", body.token);",
									"tests[\"TOKEN OK\"] = body.token;*/"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/register/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"asd\",\n\t\"email\":\"asd\",\n\t\"password\":\"asd\"\n}"
						},
						"description": "Registramos un usuario con usuario asd, correo asd y contraseña asd.\n\nDe momento aceptamos cualquier correo y cualquier contraseña."
					},
					"response": []
				},
				{
					"name": "OTHER TIME user: asd email: asd password: asd POST /register/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Es un usuario normal, Por lo que no tiene privilegios",
									"tests[\"ERROR, user y email ya existen 400\"] = responseCode.code === 400;",
									"var body = JSON.parse(responseBody); ",
									"tests[\"Error email ya existe\"] = body.email == \"El correo ya existe!\";",
									"tests[\"Error username ya existe\"] = body.username == \"El usuario ya existe!\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/register/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"asd\",\n\t\"email\":\"asd\",\n\t\"password\":\"asd\"\n}"
						},
						"description": "Registramos un usuario con usuario asd, correo asd y contraseña asd OTRA VEZ.\n\nDebe aparecer el error de que el usuario y el correo ya existe."
					},
					"response": []
				},
				{
					"name": "OTHER TIME user: asd email: asd password: asd POST /register/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Es un usuario normal, Por lo que no tiene privilegios",
									"tests[\"ERROR, user y email ya existen 400\"] = responseCode.code === 400;",
									"var body = JSON.parse(responseBody); ",
									"tests[\"Error username ya existe\"] = body.email == \"El correo ya existe!\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/register/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"asdasdasdas\",\n\t\"email\":\"asd\",\n\t\"password\":\"asd\"\n}"
						},
						"description": "Registramos un usuario con usuario asdasdasdas, correo asd y contraseña asd OTRA VEZ.\n\nDebe aparecer el error de que el usuario ya existe."
					},
					"response": []
				},
				{
					"name": "OTHER TIME user: asd email: asd password: asd POST /register/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Es un usuario normal, Por lo que no tiene privilegios",
									"tests[\"ERROR, user y email ya existen 400\"] = responseCode.code === 400;/*",
									"var body = JSON.parse(responseBody); ",
									"tests[\"Error username ya existe\"] = body.username == \"El usuario ya existe!\";*/"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/register/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"asd\",\n\t\"email\":\"asdasdasdas\",\n\t\"password\":\"asd\"\n}"
						},
						"description": "Registramos un usuario con usuario asd, correo asdasdasdas y contraseña asd OTRA VEZ.\n\nDebe aparecer el error de que el email ya existe."
					},
					"response": []
				},
				{
					"name": "USUARIO ADMIN YA REGISTRADO",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"User registry NO OK: Status code is 400\"] = responseCode.code === 400;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"/*//postman.globals.set(\"AdminToken\", body.token);",
									"tests[\"TOKEN OK\"] = body.token;*/",
									"tests[\"Correo admin existe\"] = body.email == \"El correo ya existe!\";",
									"tests[\"Usuario admin ya existe\"] = body.username == \"El usuario ya existe!\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/register/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"admin\",\n\t\"email\":\"admin\",\n\t\"password\":\"admin\"\n}"
						},
						"description": "Registramos un usuario con usuario asd, correo asd y contraseña asd.\n\nDe momento aceptamos cualquier correo y cualquier contraseña."
					},
					"response": []
				}
			]
		},
		{
			"name": "/login/",
			"description": "Dirección para inicio de sesión de los usuarios.",
			"item": [
				{
					"name": "MAL Logeo para uso de cliente no admin (ASD) POST /login/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"ERROR 404\"] = responseCode.code === 404;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"Mensaje de email no registrado.\"] = body.email == \"Email no registrado\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/login/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"asdasd\",\n\t\"password\":\"asdas\"\n}"
						},
						"description": "Inicio de sesión."
					},
					"response": []
				},
				{
					"name": "MAL Logeo para uso de cliente no admin erroneo (ASD) POST /login/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"ERROR 400\"] = responseCode.code === 400;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"BAD PASSWORD!\"] = body.password == \"Password is incorrect\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/login/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"asd\",\n\t\"password\":\"aaasd\"\n}"
						},
						"description": "Inicio de sesión con un email incorrecto."
					},
					"response": []
				},
				{
					"name": "BUEN Logeo para uso de cliente no admin (ASD) POST /login/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"User NO admin OK\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"TOKEN OK\"] = body.token;",
									"postman.userToken = body.token;",
									"",
									"postman.setGlobalVariable(\"userToken\", body.token);",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/login/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"asd\",\n\t\"password\":\"asd\"\n}"
						},
						"description": "Inicio de sesión."
					},
					"response": []
				},
				{
					"name": "Logeo para USER ADMIN POST /login/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"User NO admin OK\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"TOKEN OK\"] = body.token;",
									"postman.userToken = body.token;",
									"",
									"postman.setGlobalVariable(\"tokenAdmin\", body.token);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/login/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"admin\",\n\t\"password\":\"admin\"\n}"
						},
						"description": "Inicio de sesión."
					},
					"response": []
				}
			]
		},
		{
			"name": "/me/",
			"description": "",
			"item": [
				{
					"name": "Cambio de datos de usuario (ASD) PUT /me/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"User NO admin OK\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Ignore password\"] = body.me.password === undefined;",
									"tests[\"Send email\"] = body.me.email;",
									"tests[\"Send username\"] = body.me.username;",
									"tests[\"Send level\"] = body.me.level;",
									"tests[\"Send experience\"] = body.me.experience !== undefined;",
									"tests[\"Send games\"] = body.me.games;",
									"tests[\"Send subjects\"] = body.me.subjects;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/me",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"newemail@gmail.com\",\n\t\"password\":\"newpassword\"\n}"
						},
						"description": "Actualizando informacion del usuario cambiando email y contraseña"
					},
					"response": []
				},
				{
					"name": "Mismo email (ASD) PUT /me/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"User NO Update, same email!\"] = responseCode.code === 400;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Error, same email.\"] = body.email == \"Escribe una dirección de correo nueva!\";",
									"tests[\"ERROR, don't send me{}\"] = body.me === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/me",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"asd\"\n}"
						},
						"description": "Actualizando informacion del usuario cambiando email."
					},
					"response": []
				},
				{
					"name": "New email & password (ASD) PUT /me/ copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"User NO Admin Updated OK\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Ignore password\"] = body.me.password === undefined;",
									"tests[\"Send email\"] = body.me.email;",
									"tests[\"Send username\"] = body.me.username;",
									"tests[\"Send level\"] = body.me.level;",
									"tests[\"Send experience\"] = body.me.experience !== undefined;",
									"tests[\"Send games\"] = body.me.games;",
									"tests[\"Send subjects\"] = body.me.subjects;",
									"tests[\"Correo cambiado\"] = body.newemail === true;",
									"tests[\"Password cambiada\"] = body.newpassword === true;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/me",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"newEmail@gmail.com\",\n\t\"password\":\"newpassword\"\n}"
						},
						"description": "Actualizando informacion del usuario cambiando email y contraseña"
					},
					"response": []
				},
				{
					"name": "New password (ASD) PUT /me/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"User NO Admin Updated OK\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Ignore password\"] = body.me.password === undefined;",
									"tests[\"Send email\"] = body.me.email;",
									"tests[\"Send username\"] = body.me.username;",
									"tests[\"Send level\"] = body.me.level;",
									"tests[\"Send experience\"] = body.me.experience !== undefined;",
									"tests[\"Send games\"] = body.me.games;",
									"tests[\"Send subjects\"] = body.me.subjects;",
									"tests[\"Correo cambiado\"] = body.newemail === false;",
									"tests[\"Password cambiada\"] = body.newpassword === true;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/me",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\":\"newpassword2\"\n}"
						},
						"description": "Actualizando informacion del usuario cambiando email y contraseña"
					},
					"response": []
				},
				{
					"name": "New email (ASD) PUT /me/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"User NO Admin Updated OK\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Ignore password\"] = body.me.password === undefined;",
									"tests[\"Send email\"] = body.me.email;",
									"tests[\"Send username\"] = body.me.username;",
									"tests[\"Send level\"] = body.me.level;",
									"tests[\"Send experience\"] = body.me.experience !== undefined;",
									"tests[\"Send games\"] = body.me.games;",
									"tests[\"Send subjects\"] = body.me.subjects;",
									"tests[\"Correo cambiado\"] = body.newemail === true;",
									"tests[\"Password cambiada\"] = body.newpassword === false;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/me",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"newemail@gmail.com\"\n}"
						},
						"description": "Actualizando informacion del usuario cambiando email y contraseña"
					},
					"response": []
				},
				{
					"name": "Restableciendo datos de ASD",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"User NO Admin Updated OK\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Ignore password\"] = body.me.password === undefined;",
									"tests[\"Send email\"] = body.me.email;",
									"tests[\"Send username\"] = body.me.username;",
									"tests[\"Send level\"] = body.me.level;",
									"tests[\"Send experience\"] = body.me.experience !== undefined;",
									"tests[\"Send games\"] = body.me.games;",
									"tests[\"Send subjects\"] = body.me.subjects;",
									"tests[\"Correo cambiado\"] = body.newemail === true;",
									"tests[\"Password cambiada\"] = body.newpassword === true;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/me",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"asd\",\n\t\"password\":\"asd\"\n}"
						},
						"description": "Actualizando informacion del usuario cambiando email y contraseña"
					},
					"response": []
				}
			]
		},
		{
			"name": "/users/",
			"description": "",
			"item": [
				{
					"name": "Anonymous: /users/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Es un usuario normal, Por lo que no tiene privilegios",
									"tests[\"Normal User: Status code is 401\"] = responseCode.code === 401;",
									"",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error == \"Por favor, inicia sesión para acceder aquí.\";",
									"tests[\"Don't send array of users\"] = body[0] === undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/users/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"noob@gmail.com\",\n\t\"password\":\"nosoyadmin\"\n}"
						},
						"description": "Un usuario anonimo no puede ver los usuarios registrados."
					},
					"response": []
				},
				{
					"name": "Normal User: /users/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Es un usuario normal, Por lo que no tiene privilegios",
									"tests[\"Normal User: Status code is 401\"] = responseCode.code === 401;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error == \"No estás autorizado para entrar aquí.\";",
									"tests[\"Don't send array of users\"] = body[0] === undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/users/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"noob@gmail.com\",\n\t\"password\":\"nosoyadmin\"\n}"
						},
						"description": "Un usuario normal no puede ver los usuarios registrados."
					},
					"response": []
				},
				{
					"name": "Admin User: /users/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Es un usuario normal, Por lo que no tiene privilegios",
									"tests[\"Admin User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === undefined;",
									"tests[\"Send array\"] = body[0] !== undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/users/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"josemygel@gmail.com\",\n\t\"password\":\"soyadmin\"\n}"
						},
						"description": "Un usuario administrador puede ver los usuarios registrados."
					},
					"response": []
				}
			]
		},
		{
			"name": "/threads/",
			"description": "",
			"item": [
				{
					"name": "Anonymous: /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo no puede crear hilos (solo gente logueada)",
									"tests[\"Anonymous User: Status code is 401\"] = responseCode.code === 401;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Send error of checkAuth!\"] = body.error == \"Por favor, inicia sesión para acceder aquí.\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo del hilo a crear\",\n\t\"content\":\"Contenido del hilo a crear\"\n}"
						},
						"description": "Un usuario anonimo no puede crear hilos."
					},
					"response": []
				},
				{
					"name": "Normal User: /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Normal User: Status code is 201\"] = responseCode.code === 201;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"THREAD CREATED OK\"] = body._id !== undefined;",
									"",
									"postman.setGlobalVariable(\"userThread\", body._id);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo del hilo a crear\",\n\t\"content\":\"Contenido del hilo a crear\"\n}"
						},
						"description": "Un usuario normal no puede crear hilos."
					},
					"response": []
				},
				{
					"name": "Normal User(2): /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Normal User: Status code is 201\"] = responseCode.code === 201;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"THREAD CREATED OK\"] = body._id !== undefined;",
									"",
									"postman.setGlobalVariable(\"otherUserThread\", body._id);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo del hilo a crear 2\",\n\t\"content\":\"Contenido del hilo a crear 2\"\n}"
						},
						"description": "Un usuario normal no puede crear hilos."
					},
					"response": []
				},
				{
					"name": "Admin User: /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Admin User: Status code is 201\"] = responseCode.code === 201;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"THREAD CREATED OK\"] = body._id !== undefined;",
									"",
									"postman.setGlobalVariable(\"adminThread\", body._id);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo del hilo creado por un Administrador\",\n\t\"content\":\"Contenido del hilo creado por el Admin\"\n}"
						},
						"description": "Un usuario administrador puede crear hilos."
					},
					"response": []
				},
				{
					"name": "Anonymous: /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo puede ver hilos",
									"tests[\"Normal User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === undefined;",
									"tests[\"Send threads\"] = body[0]._id !== undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"noob@gmail.com\",\n\t\"password\":\"nosoyadmin\"\n}"
						},
						"description": "Un usuario anonimo puede leer hilos."
					},
					"response": []
				},
				{
					"name": "Normal User: /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Normal User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === undefined;",
									"tests[\"Send threads\"] = body[0]._id !== undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"noob@gmail.com\",\n\t\"password\":\"nosoyadmin\"\n}"
						},
						"description": "Un usuario normal puede leer hilos."
					},
					"response": []
				},
				{
					"name": "Admin User: /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Admin User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === undefined;",
									"tests[\"Send threads\"] = body[0] !== undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"josemygel@gmail.com\",\n\t\"password\":\"soyadmin\"\n}"
						},
						"description": "Un usuario administrador puede ver los hilos."
					},
					"response": []
				},
				{
					"name": "Anonymous: /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo no puede crear hilos (solo gente logueada)",
									"tests[\"Anonymous User: Status code is 401\"] = responseCode.code === 401;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Send error of checkAuth!\"] = body.error == \"Por favor, inicia sesión para acceder aquí.\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/{{userThread}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo EDITADO del hilo a crear\",\n\t\"content\":\"Contenido EDITADO del hilo a crear\"\n}"
						},
						"description": "Un usuario anonimo no puede crear hilos."
					},
					"response": []
				},
				{
					"name": "Normal User: /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Normal User: Status code is 201\"] = responseCode.code === 201;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"THREAD UPDATED OK\"] = body._id === postman.getGlobalVariable(\"userThread\");",
									"tests[\"Thread content Update\"] = body.content === \"Contenido EDITADO POR EL AUTOR DEL HILO\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/{{userThread}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\":\"Contenido EDITADO POR EL AUTOR DEL HILO\"\n}"
						},
						"description": "Un usuario normal puede editar SUS hilos."
					},
					"response": []
				},
				{
					"name": "Admin: /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Normal User: Status code is 201\"] = responseCode.code === 201;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"THREAD UPDATED OK\"] = body._id === postman.getGlobalVariable(\"adminThread\");",
									"tests[\"Thread content Update\"] = body.title === \"Titulo EDITADO POR UN ADMINISTRADOR del hilo a crear\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/{{adminThread}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo EDITADO POR UN ADMINISTRADOR del hilo a crear\"\n}"
						},
						"description": "Un usuario administrador puede actualizar cualquier hilo."
					},
					"response": []
				},
				{
					"name": "Admin -> User Thread: /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Normal User: Status code is 201\"] = responseCode.code === 201;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"THREAD UPDATED OK\"] = body._id === postman.getGlobalVariable(\"userThread\");",
									"tests[\"Thread content Update\"] = body.title == \"Titulo del hilo modificado por un Administrador\" && body.content == \"Contenido del hilo modificado por el Admin\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/{{userThread}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo del hilo modificado por un Administrador\",\n\t\"content\":\"Contenido del hilo modificado por el Admin\"\n}"
						},
						"description": "Un usuario administrador puede actualizar cualquier hilo."
					},
					"response": []
				},
				{
					"name": "Anonymous: /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo puede ver hilos",
									"tests[\"Normal User: Status code is 401\"] = responseCode.code === 401;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error == \"Por favor, inicia sesión para acceder aquí.\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/{{userThread}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Un usuario anonimo puede leer hilos."
					},
					"response": []
				},
				{
					"name": "User -> OthreUser : /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Normal User: Status code is 401\"] = responseCode.code === 401;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === \"You can't delete threads of others users!\";",
									"tests[\"Not thread deleted\"] = body.message === undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/{{adminThread}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Un usuario normal NO puede eliminar hilos de otros usuarios."
					},
					"response": []
				},
				{
					"name": "Normal User(OK): /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Normal User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.message === \"Thread deleted successfully!\";",
									"tests[\"Not thread deleted\"] = body.error === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/{{userThread}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Un usuario normal SI puede eliminar sus hilos."
					},
					"response": []
				},
				{
					"name": "Admin -> User Thread: /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Admin User deleting other thread: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg OK\"] = body.message === \"Thread deleted successfully!\";",
									"tests[\"Thread deleted by Admin\"] = body.error === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/{{otherUserThread}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Un usuario administrador puede borrar sus hilos."
					},
					"response": []
				},
				{
					"name": "Admin (OK): /threads/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Admin User deleting other thread: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.message === \"Thread deleted successfully!\";",
									"tests[\"Not thread deleted\"] = body.error === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/threads/{{adminThread}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Un usuario administrador puede borrar sus hilos."
					},
					"response": []
				}
			]
		},
		{
			"name": "/subjects/",
			"description": "",
			"item": [
				{
					"name": "Anonymous: /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo no puede crear hilos (solo gente logueada)",
									"tests[\"Anonymous User: Status code is 401\"] = responseCode.code === 401;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Send error of checkAuth!\"] = body.error == \"Por favor, inicia sesión para acceder aquí.\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo del hilo a crear\",\n\t\"content\":\"Contenido del hilo a crear\"\n}"
						},
						"description": "Un usuario anonimo no puede crear hilos."
					},
					"response": []
				},
				{
					"name": "Normal User: /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo no puede crear hilos (solo gente logueada)",
									"tests[\"Anonymous User: Status code is 401\"] = responseCode.code === 401;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Send error middleware isAdmin!\"] = body.error == \"No estás autorizado para entrar aquí.\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo del hilo a crear\",\n\t\"content\":\"Contenido del hilo a crear\"\n}"
						},
						"description": "Un usuario normal no puede crear hilos."
					},
					"response": []
				},
				{
					"name": "Admin User: /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Admin User: Status code is 201\"] = responseCode.code === 201;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"PART CREATED OK\"] = body._id !== undefined;",
									"tests[\"SUBJECT CREATED OK\"] = body.subject !== undefined;",
									"tests[\"TITLE CREATED OK\"] = body.title == \"Titulo del temario creado por un Administrador\";",
									"tests[\"CONTENT CREATED OK\"] = body.content == \"Contenido del temario creado por el Admin\";",
									"tests[\"EXPERIENCE CREATED OK\"] = body.experience == 500",
									"tests[\"EXAM CREATED OK\"] = body.exam == \"¿Se pueden crear examenes para temarios?\" && body.solution == \"true\";",
									"",
									"//SI FALLA, TAL VEZ HAYA QUE BORRAR LA BASE DE DATOS!",
									"tests[\"NO PREV, NO NEXT\"] = body.prev === undefined && body.next === undefined;",
									"",
									"postman.setGlobalVariable(\"partID\", body._id);",
									"postman.setGlobalVariable(\"subjectID\", body.subject);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo del temario creado por un Administrador\",\n\t\"content\":\"Contenido del temario creado por el Admin\",\n\t\"experience\":500,\n\t\"category\":\"PostmanTesting\",\n\t\"exam\":\"¿Se pueden crear examenes para temarios?\",\n\t\"solution\":\"true\"\n}"
						},
						"description": "Un usuario administrador puede crear hilos."
					},
					"response": []
				},
				{
					"name": "Admin User(2): /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Admin User: Status code is 201\"] = responseCode.code === 201;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"SUBJECT CREATED OK\"] = body._id !== undefined;",
									"tests[\"TITLE CREATED OK\"] = body.title == \"Titulo del temario creado por un Administrador con el siguiente contenido de la categoria PostmanTesting.\";",
									"tests[\"CONTENT CREATED OK\"] = body.content == \"Contenido del temario creado por el Admin que necesita haberse examinado del anterior para leerlo.\"",
									"tests[\"EXPERIENCE CREATED OK\"] = body.experience == 700",
									"tests[\"EXAM CREATED OK\"] = body.exam == \"¿Puedes acceder a otros temarios sin haber leido los anteriores?\" && body.solution == \"false\";",
									"tests[\"YES PREV\"] = body.prev !== undefined;",
									"tests[\"NO NEXT\"] = body.next === undefined;",
									"tests[\"SAME SUBJECT\"] = body.subject == postman.getGlobalVariable(\"subjectID\");",
									"",
									"postman.setGlobalVariable(\"partID2\", body._id);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo del temario creado por un Administrador con el siguiente contenido de la categoria PostmanTesting.\",\n\t\"content\":\"Contenido del temario creado por el Admin que necesita haberse examinado del anterior para leerlo.\",\n\t\"experience\":700,\n\t\"category\":\"PostmanTesting\",\n\t\"exam\":\"¿Puedes acceder a otros temarios sin haber leido los anteriores?\",\n\t\"solution\":\"false\"\n}"
						},
						"description": "Un usuario administrador puede crear hilos."
					},
					"response": []
				},
				{
					"name": "Admin User(3): /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Admin User: Status code is 201\"] = responseCode.code === 201;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"SUBJECT CREATED OK\"] = body._id !== undefined;",
									"tests[\"TITLE CREATED OK\"] = body.title == \"Titulo del temario creado por un Administrador con el siguiente contenido de la categoria PostmanTesting.\";",
									"tests[\"CONTENT CREATED OK\"] = body.content == \"Contenido del temario creado por el Admin que necesita haberse examinado del anterior para leerlo.\"",
									"    tests[\"EXPERIENCE CREATED OK\"] = body.experience == 700",
									"    tests[\"EXAM CREATED OK\"] = body.exam == \"¿Puedes acceder a otros temarios sin haber leido los anteriores?\" && body.solution == \"false\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo del temario creado por un Administrador con el siguiente contenido de la categoria PostmanTesting.\",\n\t\"content\":\"Contenido del temario creado por el Admin que necesita haberse examinado del anterior para leerlo.\",\n\t\"experience\":700,\n\t\"category\":\"PostmanTesting\",\n\t\"exam\":\"¿Puedes acceder a otros temarios sin haber leido los anteriores?\",\n\t\"solution\":\"false\"\n}"
						},
						"description": "Un usuario administrador puede crear hilos."
					},
					"response": []
				},
				{
					"name": "Admin User: /subjects/ Otra categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Admin User: Status code is 201\"] = responseCode.code === 201;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"PART CREATED OK\"] = body._id !== undefined;",
									"tests[\"SUBJECT CREATED OK\"] = body.subject !== undefined;",
									"tests[\"TITLE CREATED OK\"] = body.title == \"Tipo de tipado en los lenguajes.\";",
									"tests[\"CONTENT CREATED OK\"] = body.content == \"Los lenguajes de tipado débil son aquellos que puede variar el tipo de una variable de forma dinámica, como lo son JavaScript y PHP. A diferencia de los anteriores, los de tipado fuerte no comparten esta característica, aquí nos encontramos a C, C++, GO, entre otros.\";",
									"tests[\"EXPERIENCE CREATED OK\"] = body.experience == 200",
									"tests[\"EXAM CREATED OK\"] = body.exam == \"¿C++ es un lenguaje de tipado débil?\" && body.solution == \"true\";",
									"",
									"//SI FALLA, TAL VEZ HAYA QUE BORRAR LA BASE DE DATOS!",
									"tests[\"NO PREV, NO NEXT\"] = body.prev === undefined &&  body.next === undefined;",
									"",
									"postman.setGlobalVariable(\"partIDC\", body._id);",
									"postman.setGlobalVariable(\"subjectIDC\", body.subject);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Tipo de tipado en los lenguajes.\",\n\t\"content\":\"Los lenguajes de tipado débil son aquellos que puede variar el tipo de una variable de forma dinámica, como lo son JavaScript y PHP. A diferencia de los anteriores, los de tipado fuerte no comparten esta característica, aquí nos encontramos a C, C++, GO, entre otros.\",\n\t\"experience\":200,\n\t\"category\":\"C++\",\n\t\"exam\":\"¿C++ es un lenguaje de tipado débil?\",\n\t\"solution\":\"true\"\n}"
						},
						"description": "Un usuario administrador puede crear temarios."
					},
					"response": []
				},
				{
					"name": "Anonymous: /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo puede ver hilos",
									"tests[\"Normal User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === undefined;",
									"tests[\"PostmanTesting Exist\"] = body.filter(elem => {elem.category == \"PostmanTesting\"}).length !== -1;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6Ik5vb2IiLCJ1c2VySUQiOiI1YmNhMTE1OTNmZTVlYzE1NTUxM2E1MDMiLCJleHBpcmUiOjE1NDA0NTE5NTE2NTJ9.1UIrudZADWjsesZW-Orjmezpjrp5OkneY7JZUvf4N4w",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"noob@gmail.com\",\n\t\"password\":\"nosoyadmin\"\n}"
						},
						"description": "Un usuario anonimo puede leer hilos."
					},
					"response": []
				},
				{
					"name": "Normal User: /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Normal User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === undefined;",
									"tests[\"Send threads\"] = body[0]._id !== undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"noob@gmail.com\",\n\t\"password\":\"nosoyadmin\"\n}"
						},
						"description": "Un usuario normal puede leer hilos."
					},
					"response": []
				},
				{
					"name": "Admin User: /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Admin User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === undefined;",
									"tests[\"Send threads\"] = body[0] !== undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"josemygel@gmail.com\",\n\t\"password\":\"soyadmin\"\n}"
						},
						"description": "Un usuario administrador puede ver los hilos."
					},
					"response": []
				},
				{
					"name": "(NoPart)Anony: /subjects/{{subjectID}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo puede ver hilos",
									"tests[\"Normal User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === undefined;",
									"tests[\"Readable one\"] = body.part[0].readable === true;",
									"tests[\"No readable two\"] = body.part[1].readable === false;",
									"",
									"postman.setGlobalVariable(\"partUno\", body.part[0]._id);",
									"postman.setGlobalVariable(\"partDos\", body.part[1]._id);",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/{{subjectID}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"noob@gmail.com\",\n\t\"password\":\"nosoyadmin\"\n}"
						},
						"description": "Un usuario anonimo puede leer hilos."
					},
					"response": []
				},
				{
					"name": "Anony: /subjects/{{subjectID}}?part=ACCESIBLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo puede ver hilos",
									"tests[\"Normal User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === undefined;",
									"tests[\"Send subject\"] = body.subject !== undefined;",
									"tests[\"Send part\"] = body._id !== undefined;",
									"tests[\"NO PREV\"] = body.prev === undefined;",
									"tests[\"YES NEXT\"] = body.next !== undefined;",
									"",
									"//Almacenamos el siguiente temario para analizar",
									"postman.setGlobalVariable(\"nextSubject\", body.next);"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "127.0.0.1:3000/subjects/{{subjectID}}?part={{partUno}}",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3000",
							"path": [
								"subjects",
								"{{subjectID}}"
							],
							"query": [
								{
									"key": "part",
									"value": "{{partUno}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6Ik5vb2IiLCJ1c2VySUQiOiI1YmNhMTE1OTNmZTVlYzE1NTUxM2E1MDMiLCJleHBpcmUiOjE1NDA0NTE5NTE2NTJ9.1UIrudZADWjsesZW-Orjmezpjrp5OkneY7JZUvf4N4w",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"noob@gmail.com\",\n\t\"password\":\"nosoyadmin\"\n}"
						},
						"description": "Un usuario anonimo puede leer hilos."
					},
					"response": []
				},
				{
					"name": "Anony: /subjects/{{subjectID}}?part=NOACCESIBLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo puede ver hilos",
									"tests[\"Normal User: Status code is 401\"] = responseCode.code === 401;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error !== undefined;",
									"tests[\"Send threads\"] = body._id === undefined;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "127.0.0.1:3000/subjects/{{subjectID}}?part={{nextSubject}}",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3000",
							"path": [
								"subjects",
								"{{subjectID}}"
							],
							"query": [
								{
									"key": "part",
									"value": "{{nextSubject}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6Ik5vb2IiLCJ1c2VySUQiOiI1YmNhMTE1OTNmZTVlYzE1NTUxM2E1MDMiLCJleHBpcmUiOjE1NDA0NTE5NTE2NTJ9.1UIrudZADWjsesZW-Orjmezpjrp5OkneY7JZUvf4N4w",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"noob@gmail.com\",\n\t\"password\":\"nosoyadmin\"\n}"
						},
						"description": "Un usuario anonimo puede leer hilos."
					},
					"response": []
				},
				{
					"name": "Normal User: /subjects/{{subjectID}}?part={{partUno}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo puede ver hilos",
									"tests[\"Normal User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === undefined;",
									"tests[\"Send subject\"] = body.subject !== undefined;",
									"tests[\"Send part\"] = body._id !== undefined;",
									"tests[\"NO PREV\"] = body.prev === undefined;",
									"tests[\"YES NEXT\"] = body.next !== undefined;",
									"",
									"//Almacenamos el siguiente temario para analizar",
									"postman.setGlobalVariable(\"nextPart\", body.next);"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "127.0.0.1:3000/subjects/{{subjectID}}?part={{partUno}}",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3000",
							"path": [
								"subjects",
								"{{subjectID}}"
							],
							"query": [
								{
									"key": "part",
									"value": "{{partUno}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"noob@gmail.com\",\n\t\"password\":\"nosoyadmin\"\n}"
						},
						"description": "Un usuario normal puede leer hilos."
					},
					"response": []
				},
				{
					"name": "Normal User: /subjects/{{subjectID}}?part={{partUno}} copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo puede ver hilos",
									"tests[\"Normal User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === undefined;",
									"tests[\"Send subject\"] = body.subject !== undefined;",
									"tests[\"Send part\"] = body._id !== undefined;",
									"tests[\"NO PREV\"] = body.prev === undefined;",
									"tests[\"YES NEXT\"] = body.next !== undefined;",
									"",
									"//Almacenamos el siguiente temario para analizar",
									"postman.setGlobalVariable(\"nextSubject\", body.next);"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "127.0.0.1:3000/subjects/{{subjectID}}?part={{nextPart}}",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3000",
							"path": [
								"subjects",
								"{{subjectID}}"
							],
							"query": [
								{
									"key": "part",
									"value": "{{nextPart}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"noob@gmail.com\",\n\t\"password\":\"nosoyadmin\"\n}"
						},
						"description": "Un usuario normal puede leer hilos."
					},
					"response": []
				},
				{
					"name": "Admin User: /subjects/{{subjectID}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Admin User: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === undefined;",
									"tests[\"Send threads\"] = body[0] !== undefined;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "127.0.0.1:3000/subjects/{{subjectID}}?part={{partDos}}",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3000",
							"path": [
								"subjects",
								"{{subjectID}}"
							],
							"query": [
								{
									"key": "part",
									"value": "{{partDos}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"josemygel@gmail.com\",\n\t\"password\":\"soyadmin\"\n}"
						},
						"description": "Un usuario administrador puede ver los hilos."
					},
					"response": []
				},
				{
					"name": "Anonymous: /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo no puede crear hilos (solo gente logueada)",
									"tests[\"Anonymous User: Status code is 401\"] = responseCode.code === 401;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Send error of checkAuth!\"] = body.error == \"Por favor, inicia sesión para acceder aquí.\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/{{subjectID}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo EDITADO del hilo a crear\",\n\t\"content\":\"Contenido EDITADO del hilo a crear\"\n}"
						},
						"description": "Un usuario anonimo no puede crear hilos."
					},
					"response": []
				},
				{
					"name": "Normal User: /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Normal User: Status code is 201\"] = responseCode.code === 201;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"THREAD UPDATED OK\"] = body._id === postman.getGlobalVariable(\"userThread\");",
									"tests[\"Thread content Update\"] = body.content === \"Contenido EDITADO POR EL AUTOR DEL HILO\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/{{subjectsID}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\":\"Contenido EDITADO POR EL AUTOR DEL HILO\"\n}"
						},
						"description": "Un usuario normal puede editar SUS hilos."
					},
					"response": []
				},
				{
					"name": "Admin: /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Normal User: Status code is 201\"] = responseCode.code === 201;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"THREAD UPDATED OK\"] = body._id === postman.getGlobalVariable(\"adminThread\");",
									"tests[\"Thread content Update\"] = body.title === \"Titulo EDITADO POR UN ADMINISTRADOR del hilo a crear\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/{{subjectsID}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Titulo EDITADO POR UN ADMINISTRADOR del hilo a crear\"\n}"
						},
						"description": "Un usuario administrador puede actualizar cualquier hilo."
					},
					"response": []
				},
				{
					"name": "Anonymous: /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//Todo el mundo puede ver hilos",
									"tests[\"Normal User: Status code is 401\"] = responseCode.code === 401;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error == \"Por favor, inicia sesión para acceder aquí.\";"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/{{subjectsID}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Un usuario anonimo puede leer hilos."
					},
					"response": []
				},
				{
					"name": "User -> OthreUser : /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Normal User: Status code is 401\"] = responseCode.code === 401;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.error === \"You can't delete threads of others users!\";",
									"tests[\"Not thread deleted\"] = body.message === undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/{{subjectsID}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Un usuario normal NO puede eliminar hilos de otros usuarios."
					},
					"response": []
				},
				{
					"name": "Admin (OK): /subjects/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Admin User deleting other thread: Status code is 200\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"msg error\"] = body.message === \"Thread deleted successfully!\";",
									"tests[\"Not thread deleted\"] = body.error === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/subjects/{{subjectsID}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{tokenAdmin}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Un usuario administrador puede borrar sus hilos."
					},
					"response": []
				}
			]
		},
		{
			"name": "/exams/",
			"description": "",
			"item": []
		},
		{
			"name": "/games/",
			"description": "",
			"item": []
		},
		{
			"name": "Clean",
			"description": "",
			"item": [
				{
					"name": "Delete del user no admin DELETE /me/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"User eliminado correctamente OK\"] = responseCode.code === 200;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"DELETE OK\"] = body.message == \"Usuario eliminado definitivamente.\"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/me/",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Inicio de sesión."
					},
					"response": []
				},
				{
					"name": "Delete other time user no admin DELETE /me/ copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"No se encuentra la cuenta otra vez. Por lo que pide un iniciar sesión.\"] = responseCode.code === 401;",
									"",
									"var body = JSON.parse(responseBody);",
									"tests[\"DELETE NO OK (ya se realizó)\"] = body.error",
									"== \"¡Por favor, inicia sesión!\"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/me/",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bareer {{userToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Inicio de sesión."
					},
					"response": []
				}
			]
		}
	]
}