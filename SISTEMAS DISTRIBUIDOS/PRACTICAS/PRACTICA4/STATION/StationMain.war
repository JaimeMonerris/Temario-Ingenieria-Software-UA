//import java.util.Random;
import java.lang.*;
import java.io.*;


public class StationMain {

	private final String name,lcd;
	private final Int h,t,l;


	public Int t(){ return Int.parseInt(getData()[0]); }
	public Int h(){ return Int.parseInt(getData()[1]); }
	public Int l(){ return Int.parseInt(getData()[2]); }
	public String lcd(){ return getData()[3]; }
	public String getName(){ return name; }

	public Void setName(String n){ name = (!n.isEmpty()) ? n : name; }
	public Void lcd(String lcd){ this.lcd = lcd; }
	public Void setT(Int t2){ t=t2; }
	public Void setT(Int h2){ h=h2; }
	public Void setT(Int l2){ l=l2; }
	public Void t(Int t2){ if(t2 >=-30 && t2 <= 50){ setT(t2) }; }
	public Void h(Int h2){ if(h2 >=0 && h2 <= 100){ setH(h2) }; }
	public Void l(Int l2){ if(l2 >=0 && l2 <= 800){ setL(l2) }; }
/*
    // (obtener el HTML)
    private String getFileContent(FileInputStream fis, String encoding) throws IOException {
        try (BufferedReader br = new BufferedReader(new InputStreamReader(fis, encoding))) {
            StringBuilder sb = new StringBuilder();
            String line;
            while ((line = br.readLine()) != null) {
                sb.append(line);
                sb.append('\n');
            }
            return sb.toString();
        }
    }

	// Metodo para obtener de un FileInputStream y una codificacion un String
    // (obtener el HTML)
    private String getFileContent(FileInputStream fis, String encoding) throws IOException {
        try (BufferedReader br = new BufferedReader(new InputStreamReader(fis, encoding))) {
            StringBuilder sb = new StringBuilder();
            String line;
            while ((line = br.readLine()) != null) {
                sb.append(line);
                sb.append('\n');
            }
            return sb.toString();
        }
    }

	public String[] getData() throws RemoteException {
		String[] arr = new String[4];

		try{
			File af = new File(getRmiName()+".txt");
			BufferedWriter bw;
			if(!af.exists())
			{      
				bw = new BufferedWriter(new FileWriter(af));
				Integer temp = 35;
				String temperatura = temp.toString();
				temp = 30;
				String humedad =temp.toString();
				temp = 500;
				String luminosidad = temp.toString();
				String lcd = "Estacion sin descripcion.";
				bw.write("temperature:"+temperatura+"\nhumidity:"+humedad+"\nluminity:"+luminosidad+"\nLCD:"+lcd);
				bw.close();
			}
			
			FileInputStream archivo = new FileInputStream(getRmiName()+".txt");

			String content = getFileContent(archivo, "UTF8");

			String[] text = content.split("\n");
			
		
			for(int i = 0; i<=3 && i<text.length; i++)
				arr[i] = text[i].split(":")[1];
			//Integer.parseInt(text[i].split(":")[1])

			//Control temperatura
			arr[0] = Integer.parseInt(arr[0]) < -30 ? "-30" : arr[0];
			arr[0] = Integer.parseInt(arr[0]) >  50 ?  "50" : arr[0];

			//Control de humedad
			arr[1] = Integer.parseInt(arr[1]) < 0 ?   "0" : arr[1];
			arr[1] = Integer.parseInt(arr[1]) > 100 ? "100" : arr[1];

			//Control de luz
			arr[2] = Integer.parseInt(arr[2]) < 0 ?   "0" : arr[2];
			arr[2] = Integer.parseInt(arr[2]) > 800 ? "800" : arr[2];

		}catch(Exception ex){
			System.out.println(ex.getMessage());
		}
		return arr;
	}*/
}
